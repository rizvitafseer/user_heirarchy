<%= form_tag({}, :data => {:cm_url => time_entries_context_menu_path}) do -%>
<%= hidden_field_tag 'back_url', url_for(:params => request.query_parameters), :id => nil %>
<div class="autoscroll">
<table class="list odd-even time-entries">
<thead>
  <tr>
    <th class="checkbox hide-when-print">
      <%= check_box_tag 'check_all', '', false, :class => 'toggle-selection',
        :title => "#{l(:button_check_all)}/#{l(:button_uncheck_all)}" %>
    </th>
    <% @query.inline_columns.each do |column| %>
      <%= column_header(@query, column) %>
    <% end %>
    <th></th>
  </tr>
</thead>
<tbody>
<% if @query.filters["heirarchy"].present? 
     heirarchy_array = []
  %>

  <% grp_by_proj = entries.group_by(&:project_id)
   curr_filter_value = @query.filters["heirarchy"][:values].last.to_i
   heirarchy_roles = IssueQuery.get_heirarchy_roles(curr_filter_value)
   role_heirarchies = Setting.plugin_user_heirarchy["heirarchy"]
    grp_by_proj.each do |project_id, p_entries|
      proj = p_entries.last.project
      proj_members = Member.joins(:member_roles).select("member_roles.role_id").where("members.project_id = ?", proj.id)
      role_heirarchies.each do |h_role|
        next unless heirarchy_roles.include?(h_role.to_i)
        next unless proj_members.map(&:role_id).include?(h_role.to_i)
        role_groups = proj.members.includes(:member_roles).select{|mr| mr.role_ids.include?(h_role.to_i) }
      %>
      <% 
      this_proj_entries = p_entries.select{|ent| role_groups.map(&:user_id).include?(ent.issue.assigned_to_id) }
      this_proj_entries_count = this_proj_entries.size
      this_proj_entries_sum = this_proj_entries.map(&:hours).sum
     %>

    <% reset_cycle %>
    <tr class="group open">
      <td colspan="<%= @query.inline_columns.size + 2 %>">
        <span class="expander icon icon-expended" onclick="toggleRowGroup(this);">&nbsp;</span>
        <span class="name"><%= "#{proj.name}(#{Role.find(h_role.to_i).name})" %></span>
        <% if this_proj_entries_sum %>
        <span class="badge badge-count count"><%= this_proj_entries_sum %></span>
        <% end %>
        <span class="totals">(<%= this_proj_entries_count %>)</span>
        <%= link_to_function("#{l(:button_collapse_all)}/#{l(:button_expand_all)}",
                             "toggleAllRowGroups(this)", :class => 'toggle-all') %>
      </td>
    </tr>
    <% if this_proj_entries.present?
        this_proj_entries.each do |entry| 
    %>
    <tr id="time-entry-<%= entry.id %>" class="time-entry <%= cycle("odd", "even") %> hascontextmenu">
    <td class="checkbox hide-when-print"><%= check_box_tag("ids[]", entry.id, false, :id => nil) %></td>
    <% @query.inline_columns.each do |column| %>
    <%= content_tag('td', column_content(column, entry), :class => column.css_classes) %>
    <% end %>
    <td class="buttons">
    <% if entry.editable_by?(User.current) -%>
        <%= link_to l(:button_edit), edit_time_entry_path(entry),
                    :title => l(:button_edit),
                    :class => 'icon-only icon-edit' %>
        <%= link_to l(:button_delete), time_entry_path(entry),
                    :data => {:confirm => l(:text_are_you_sure)},
                    :method => :delete,
                    :title => l(:button_delete),
                    :class => 'icon-only icon-del' %>
    <% end -%>
        <%= link_to_context_menu %>
    </td>
  </tr>
  <% end %>
  <% end %>
  <% end %>
  <% end %>
<% else %>
<% grouped_query_results(entries, @query) do |entry, group_name, group_count, group_totals| -%>
  <% if group_name %>
    <% reset_cycle %>
    <tr class="group open">
      <td colspan="<%= @query.inline_columns.size + 2 %>">
        <span class="expander icon icon-expended" onclick="toggleRowGroup(this);">&nbsp;</span>
        <span class="name"><%= group_name %></span>
        <% if group_count %>
        <span class="badge badge-count count"><%= group_count %></span>
        <% end %>
        <span class="totals"><%= group_totals %></span>
        <%= link_to_function("#{l(:button_collapse_all)}/#{l(:button_expand_all)}",
                             "toggleAllRowGroups(this)", :class => 'toggle-all') %>
      </td>
    </tr>
  <% end %>
  <tr id="time-entry-<%= entry.id %>" class="time-entry <%= cycle("odd", "even") %> hascontextmenu">
    <td class="checkbox hide-when-print"><%= check_box_tag("ids[]", entry.id, false, :id => nil) %></td>
    <% @query.inline_columns.each do |column| %>
    <%= content_tag('td', column_content(column, entry), :class => column.css_classes) %>
    <% end %>
    <td class="buttons">
    <% if entry.editable_by?(User.current) -%>
        <%= link_to l(:button_edit), edit_time_entry_path(entry),
                    :title => l(:button_edit),
                    :class => 'icon-only icon-edit' %>
        <%= link_to l(:button_delete), time_entry_path(entry),
                    :data => {:confirm => l(:text_are_you_sure)},
                    :method => :delete,
                    :title => l(:button_delete),
                    :class => 'icon-only icon-del' %>
    <% end -%>
        <%= link_to_context_menu %>
    </td>
  </tr>

  <% @query.block_columns.each do |column|
       if (text = column_content(column, entry)) && text.present? -%>
  <tr class="<%= current_cycle %>">
    <td colspan="<%= @query.inline_columns.size + 1 %>" class="<%= column.css_classes %>">
    <% if @query.block_columns.count > 1 %>
      <span><%= column.caption %></span>
    <% end %>
    <%= text %>
    </td>
  </tr>
  <% end -%>
  <% end -%>
<% end -%>
<% end -%>
</tbody>
</table>
</div>
<% end -%>

<%= context_menu %>
